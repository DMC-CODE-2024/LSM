------------eirs-lsm-0.0.2 (Release Notes)

1. API call of EIR Using Basic auth

DB change : 

Need to Update basic auth Credentials below sample is added

('LSM_OPERATOR_PM_1_BASIC_AUTH_CREDENTIALS','arun:password','EIRS_LSM');

application.yml : 

NA

------------eirs-lsm-0.0.3 (Release Notes)

1. Password Encryption/Decryption Support added
2. It will delete default before 5 olders records in deviceSyncRequest
3. Scheduler will default runs daily 1AM morning.
4. files will be created before deleting records from Device_Sync_Request

DB change :

Update basicAuthCredentials also as encrypted, LSM_OPERATOR_<OPERATOR>_BASIC_AUTH_CREDENTIALS

application.yml :

scheduler:
  daily:
    cronjob: 0 0 1 * * *

deviceSyncRequest:
  delete:
    beforeDays: 5
    filePath: D:/

jasypt:
  encryptor:
    password: eir
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator

------------eirs-lsm-0.0.4 (Release Notes)

1. Oracle Support and Mysql Support

application.yml :

spring:
#  datasource:
#    url: jdbc:mysql://127.0.0.1:3306/eirs
#    username: root
#    password: ENC(jxNzi7e8T94AnHUxgizmuQ==)
#    driverClassName: com.mysql.cj.jdbc.Driver
  datasource:
    url: jdbc:oracle:thin:@64.227.137.112:1521/ORCLPDB1
    username: CRESTELCEIR
    password: CRESTELCEIR123#
    driverClassName: oracle.jdbc.driver.OracleDriver
  jpa:
    show-sql: false
    #properties:
    hibernate:
      ddl-auto: none
#      dialect: org.hibernate.dialect.MySQL5InnoDBDialect
      dialect: org.hibernate.dialect.Oracle10gDialect

DB change :

create table approved_tac_his (id number(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
operation number(1,0),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6),
tac varchar2(10 char), primary key (id));


create table blocked_tac_his (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
operation number(1,0),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6),
tac varchar2(10 char), primary key (id));


create table blacklist_device_his (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
imei varchar2(20 char),
imsi varchar2(20 char),
msisdn varchar2(20 char),
operation number(1,0),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6), primary key (id));

create table exception_list_device_his (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
imei varchar2(20 char),
imsi varchar2(20 char),
msisdn varchar2(20 char),
operation number(1,0),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6), primary key (id));

create table greylist_device_his (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
imei varchar2(20 char),
imsi varchar2(20 char),
msisdn varchar2(20 char),
operation number(1,0),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6), primary key (id));


create table approved_tac (id number(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6),
tac varchar2(10 char), primary key (id));


create table blocked_tac (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6),
tac varchar2(10 char), primary key (id));


create table blacklist_device (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
imei varchar2(20 char),
imsi varchar2(20 char),
msisdn varchar2(20 char),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6), primary key (id));

create table exception_list_device (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
imei varchar2(20 char),
imsi varchar2(20 char),
msisdn varchar2(20 char),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6), primary key (id));

create table greylist_device (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
imei varchar2(20 char),
imsi varchar2(20 char),
msisdn varchar2(20 char),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6), primary key (id));

create table device_sync_request (id number(19,0)  GENERATED BY DEFAULT ON NULL AS IDENTITY,
created_on timestamp(6) default systimestamp,
device_id varchar2(20 char),
failure_reason varchar2(200 char),
identity varchar2(20 char) check (identity in ('TRACKED_LIST','BLOCKED_LIST','EXCEPTION_LIST','BLOCKED_TAC','ALLOWED_TAC')),
imei varchar2(20 char),
imsi varchar2(20 char),
insert_for_sync_time timestamp(6),
msisdn varchar2(20 char),
no_of_retry number(10,0),
operation number(10,0),
operator_id varchar2(20 char),
operator_name varchar2(20 char),
request_date timestamp(6),
status varchar2(20 char) check (status in ('NEW','INIT','FAILED','CONNECTION_FAILED','SYNCED','SYNC_STOP')),
sync_request_time timestamp(6),
sync_response_time timestamp(6),
tac varchar2(8 char), primary key (id));

CREATE TABLE sys_param (
id number(19,0) GENERATED BY DEFAULT ON NULL AS IDENTITY,
  tag varchar2(100 char) ,
  value varchar2(200 char) ,
  feature_name varchar(200) ,
  PRIMARY KEY (id)
);


